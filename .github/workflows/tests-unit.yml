name: Tests unit

on:
  push:
    branches: [main] # Trigger the workflow on push events to the main branch
  pull_request:
    branches: [main] # Trigger the workflow on pull request events targeting the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  tests-unit:
    # If the last commit message contains 'run-ci-unit' or the workflow is manually triggered, this GitHub Action should run
    if: ${{ contains(github.event.head_commit.message, 'run-ci-unit') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    timeout-minutes: 2 # Set a hard timeout of 2 minutes for the entire job

    strategy:
      fail-fast: true # Stop all jobs if any job fails

    env:
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4 # Check out the repository code

      - name: 🔧 Set up Bun environment
        uses: oven-sh/setup-bun@v2 # Set up the Bun runtime
        with:
          bun-version: latest

      - name: 📦 Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: ⬇️ Install dependencies
        run: |
          if [ "${{ steps.cache-node-modules.outputs.cache-hit }}" != "true" ]; then
            bun install --frozen-lockfile # Install dependencies if not cached
          else
            echo "✅ Dependencies are already cached"
            bun run prepare
          fi

      - name: 🧪 Run unit tests
        run: bun run test:unit # Execute unit tests
