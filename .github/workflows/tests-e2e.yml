name: Tests e2e

on:
  push:
    branches: [main] # Trigger the workflow on push events to the main branch
  pull_request:
    branches: [main] # Trigger the workflow on pull request events targeting the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  tests-e2e:
    # If the last commit message contains 'run-ci-e2e' or the workflow is manually triggered, this GitHub Action should run
    if: ${{ contains(github.event.head_commit.message, 'run-ci-e2e') || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    timeout-minutes: 10 # Set a hard timeout of 10 minutes for the entire job

    strategy:
      fail-fast: false # Continue running jobs even if one of the jobs fails

    env:
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4 # Check out the repository code

      - name: 🔧 Set up Bun environment
        uses: oven-sh/setup-bun@v2 # Set up the Bun runtime
        with:
          bun-version: latest

      - name: 📦 Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: ⬇️ Install dependencies
        run: |
          if [ "${{ steps.cache-node-modules.outputs.cache-hit }}" != "true" ]; then
          bun install --frozen-lockfile # Install dependencies if not cached
          else
          echo "✅ Dependencies are already cached"
          fi

      - name: 🔎 Get installed Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -e "
            const packageJson = require('./package.json');
            console.log(packageJson.devDependencies['@playwright/test']);
          ")
           echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: 🌍 Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 🌍 Install Playwright Browsers
        run: |
          if [ "${{ steps.cache-playwright.outputs.cache-hit }}" != "true" ]; then
            bunx playwright install --with-deps
          else
            echo "✅ Playwright Browsers are already cached"
          fi

      - name: 🎭 Run Playwright tests
        run: bun run test:e2e

      - name: 📝 Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5
